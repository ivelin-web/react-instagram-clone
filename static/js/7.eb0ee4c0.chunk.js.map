{"version":3,"sources":["firebase.js","components/posts/PostInput.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","storage","auth","provider","GoogleAuthProvider","PostInput","inputRef","useRef","fileRef","useState","imageToPost","setImageToPost","openDialogError","setOpenDialogError","useStateValue","user","handleDialogClose","removeImageFromPost","className","open","keepMounted","onClose","aria-labelledby","aria-describedby","id","onClick","color","src","photoURL","alt","onSubmit","e","preventDefault","current","value","collection","add","name","displayName","likes","message","timestamp","FieldValue","serverTimestamp","then","doc","uploadTask","ref","putString","on","error","console","log","child","getDownloadURL","url","set","image","merge","type","placeholder","split","hidden","title","style","fontSize","click","onChange","reader","FileReader","target","files","readAsDataURL","onload","readerEvent","result"],"mappings":"0HAAA,mHAYMA,EAAcC,IAASC,cAVN,CACnBC,OAAQ,0CACRC,WAAY,8CACZC,UAAW,8BACXC,cAAe,0CACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIbC,EAAKT,IAASU,YACdC,EAAUZ,EAAYY,UACtBC,EAAOb,EAAYa,OACnBC,EAAW,IAAIb,IAASY,KAAKE,mBAGpBL,O,uOCJA,SAASM,IACpB,IAAMC,EAAWC,iBAAO,MAClBC,EAAUD,iBAAO,MAEvB,EAAsCE,mBAAS,MAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8CF,oBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KAEA,EAA6BC,cAA7B,mBAASC,EAAT,KAASA,KAMHC,GANN,KAM0B,WACtBH,GAAmB,KAgEjBI,EAAsB,WACxBN,EAAe,OAGnB,OACI,sBAAKO,UAAU,2CAAf,UACI,eAAC,IAAD,CAAQC,KAAMP,EAAiBQ,aAAW,EAACC,QAASL,EAAmBM,kBAAgB,2BAA2BC,mBAAiB,iCAAnI,UACI,cAAC,IAAD,CAAaC,GAAG,2BAAhB,SAA4C,wBAC5C,cAAC,IAAD,UACI,cAAC,IAAD,CAAmBA,GAAG,iCAAtB,qEAEJ,cAAC,IAAD,UACI,cAAC,IAAD,CAAQN,UAAU,qBAAqBO,QAAST,EAAmBU,MAAM,UAAzE,qBAKR,sBAAKR,UAAU,6DAAf,UACI,cAAC,IAAD,CAAQA,UAAU,iBAAiBS,IAAKZ,EAAKa,SAAUC,IAAI,WAC3D,uBAAMC,SAhFO,SAACC,GACtBA,EAAEC,iBAEG1B,EAAS2B,QAAQC,QAIjBxB,GAKLX,IAAGoC,WAAW,SACTC,IAAI,CACDT,IAAKZ,EAAKa,SACVS,KAAMtB,EAAKuB,YACXC,MAAO,EACPC,QAASlC,EAAS2B,QAAQC,MAC1BO,UAAWnD,IAASU,UAAU0C,WAAWC,oBAE5CC,MAAK,SAACC,GACH,IAAMC,EAAa7C,IAAQ8C,IAAR,iBAAsBF,EAAIrB,KAAMwB,UAAUtC,EAAa,YAE1EO,IAEA6B,EAAWG,GACP,eACA,MACA,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MACvB,WACIjD,IACK8C,IAAI,SACJM,MAAMR,EAAIrB,IACV8B,iBACAV,MAAK,SAACW,GACHxD,IAAGoC,WAAW,SAASU,IAAIA,EAAIrB,IAAIgC,IAC/B,CACIC,MAAOF,GAEX,CAAEG,OAAO,aAOrCpD,EAAS2B,QAAQC,MAAQ,IArDzBrB,GAAmB,KAuFuBK,UAAU,YAA5C,UACI,uBAAO6B,IAAKzC,EAAUY,UAAU,8HAA8HyC,KAAK,OAAOC,YAAW,8BAAyB7C,EAAKuB,YAAYuB,MAAM,KAAK,MAC1O,wBAAQF,KAAK,SAASG,QAAM,EAA5B,uBAIHpD,GACG,sBAAKe,QAASR,EAAqBC,UAAU,iBAA7C,UACI,qBAAKA,UAAU,sDAAsDS,IAAKjB,EAAamB,IAAI,eAC3F,mBAAGX,UAAU,+CAAb,0BAKZ,sBAAKA,UAAU,oBAAf,UACI,sBAAKA,UAAU,kIAAkI6C,MAAM,iBAAvJ,UACI,cAAC,IAAD,CAAe7C,UAAU,eAAe8C,MAAO,CAAEC,SAAU,MAC3D,mBAAG/C,UAAU,gDAAb,2BAEJ,sBAAKO,QAAS,kBAAMjB,EAAQyB,QAAQiC,SAAShD,UAAU,kIAAvD,UACI,cAAC,IAAD,CAAWA,UAAU,iBAAiB8C,MAAO,CAAEC,SAAU,MACzD,mBAAG/C,UAAU,gDAAb,yBACA,uBAAO6B,IAAKvC,EAAS2D,SArDd,SAACpC,GACpB,IAAMqC,EAAS,IAAIC,WAEftC,EAAEuC,OAAOC,MAAM,IACfH,EAAOI,cAAczC,EAAEuC,OAAOC,MAAM,IAGxCH,EAAOK,OAAS,SAACC,GACb/D,EAAe+D,EAAYJ,OAAOK,UA6CqBhB,KAAK,OAAOG,QAAM","file":"static/js/7.eb0ee4c0.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCztakH5kbQAx_-8SNOZtDLoq-8AmHTN1U\",\r\n    authDomain: \"instagram-clone-react-e8004.firebaseapp.com\",\r\n    projectId: \"instagram-clone-react-e8004\",\r\n    storageBucket: \"instagram-clone-react-e8004.appspot.com\",\r\n    messagingSenderId: \"485454194350\",\r\n    appId: \"1:485454194350:web:9dcef08d4383719e2bef3f\",\r\n    measurementId: \"G-1Z61LZMR0Q\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\nconst storage = firebaseApp.storage();\r\nconst auth = firebaseApp.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider, storage };\r\nexport default db;\r\n","import React, { useRef } from \"react\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport PhotoIcon from \"@material-ui/icons/Photo\";\r\nimport VideoCallIcon from \"@material-ui/icons/VideoCall\";\r\nimport { useState } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport db, { storage } from \"../../firebase\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function PostInput() {\r\n    const inputRef = useRef(null);\r\n    const fileRef = useRef(null);\r\n\r\n    const [imageToPost, setImageToPost] = useState(null);\r\n    const [openDialogError, setOpenDialogError] = useState(false);\r\n\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    const handleDialogOpen = () => {\r\n        setOpenDialogError(true);\r\n    };\r\n\r\n    const handleDialogClose = () => {\r\n        setOpenDialogError(false);\r\n    };\r\n\r\n    const handleSubmitPost = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!inputRef.current.value) {\r\n            return;\r\n        }\r\n\r\n        if (!imageToPost) {\r\n            handleDialogOpen();\r\n            return;\r\n        }\r\n\r\n        db.collection(\"posts\")\r\n            .add({\r\n                src: user.photoURL,\r\n                name: user.displayName,\r\n                likes: 0,\r\n                message: inputRef.current.value,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n            .then((doc) => {\r\n                const uploadTask = storage.ref(`/posts/${doc.id}`).putString(imageToPost, \"data_url\");\r\n\r\n                removeImageFromPost();\r\n\r\n                uploadTask.on(\r\n                    \"state_change\",\r\n                    null,\r\n                    (error) => console.log(error),\r\n                    () => {\r\n                        storage\r\n                            .ref(\"posts\")\r\n                            .child(doc.id)\r\n                            .getDownloadURL()\r\n                            .then((url) => {\r\n                                db.collection(\"posts\").doc(doc.id).set(\r\n                                    {\r\n                                        image: url,\r\n                                    },\r\n                                    { merge: true }\r\n                                );\r\n                            });\r\n                    }\r\n                );\r\n            });\r\n\r\n        inputRef.current.value = \"\";\r\n    };\r\n\r\n    const addImageToPost = (e) => {\r\n        const reader = new FileReader();\r\n\r\n        if (e.target.files[0]) {\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n\r\n        reader.onload = (readerEvent) => {\r\n            setImageToPost(readerEvent.target.result);\r\n        };\r\n    };\r\n\r\n    const removeImageFromPost = () => {\r\n        setImageToPost(null);\r\n    };\r\n\r\n    return (\r\n        <div className=\"mb-8 bg-white p-3 border border-gray-300\">\r\n            <Dialog open={openDialogError} keepMounted onClose={handleDialogClose} aria-labelledby=\"alert-dialog-slide-title\" aria-describedby=\"alert-dialog-slide-description\">\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Select image first!\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">Please select any image first and then upload a post.</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button className=\"focus:outline-none\" onClick={handleDialogClose} color=\"primary\">\r\n                        OK\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <div className=\"flex items-center border-b border-gray-200 pb-3 mb-3 gap-3\">\r\n                <Avatar className=\"cursor-pointer\" src={user.photoURL} alt=\"Avatar\" />\r\n                <form onSubmit={handleSubmitPost} className=\"flex-grow\">\r\n                    <input ref={inputRef} className=\"w-full focus:outline-none bg-transparent rounded-full bg-gray-100 p-2 pl-3 hover:bg-gray-200 transition-colors duration-200\" type=\"text\" placeholder={`Whats on your mind, ${user.displayName.split(\" \")[0]}`} />\r\n                    <button type=\"submit\" hidden>\r\n                        Submit\r\n                    </button>\r\n                </form>\r\n                {imageToPost && (\r\n                    <div onClick={removeImageFromPost} className=\"cursor-pointer\">\r\n                        <img className=\"w-14 h-14 shadow-md object-cover block rounded-full\" src={imageToPost} alt=\"Post Image\" />\r\n                        <p className=\"text-sm text-red-500 text-center font-medium\">Remove</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"flex items-center\">\r\n                <div className=\"flex items-center justify-center flex-grow rounded-lg p-1 gap-1 cursor-pointer hover:bg-gray-100 transition-colors duration-200\" title=\"Not Working...\">\r\n                    <VideoCallIcon className=\"text-red-500\" style={{ fontSize: 30 }} />\r\n                    <p className=\"text-gray-500 font-medium text-sm select-none\">Live Video</p>\r\n                </div>\r\n                <div onClick={() => fileRef.current.click()} className=\"flex items-center justify-center flex-grow rounded-lg p-1 gap-1 cursor-pointer hover:bg-gray-100 transition-colors duration-200\">\r\n                    <PhotoIcon className=\"text-green-500\" style={{ fontSize: 30 }} />\r\n                    <p className=\"text-gray-500 font-medium text-sm select-none\">Image/Video</p>\r\n                    <input ref={fileRef} onChange={addImageToPost} type=\"file\" hidden />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"sourceRoot":""}